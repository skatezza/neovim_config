
local status, packer = pcall(require, "packer")
if (not status) then
  print("Packer is not installed")
  return
end

vim.cmd [[packadd packer.nvim]]

return require('packer').startup(function(use)
  use 'wbthomason/packer.nvim'
  -- use {
  --   'svrana/neosolarized.nvim',
  --   requires = { 'tjdevries/colorbuddy.nvim' }
  -- }
  use {
    'prettier/vim-prettier',
    run = 'yarn install --frozen-lockfile --production',
    ft = { 'astro', 'golang', 'javascript', 'typescript', 'css', 'scss', 'json', 'graphql', 'markdown', 'php', 'python',
      'vue', 'svelte', 'yaml', 'html' }
  }
  use({
    "roobert/tailwindcss-colorizer-cmp.nvim",
    -- Optionally, override the default options:
    config = function()
      require("tailwindcss-colorizer-cmp").setup({
        color_square_width = 2,
      })
    end
  })
require("cmp").config.formatting = {
  format = require("tailwindcss-colorizer-cmp").formatter
}
  use 'vimwiki/vimwiki'
  use({
    "jackMort/ChatGPT.nvim",
    config = function()
      require("chatgpt").setup()
    end,
    requires = {
      "MunifTanjim/nui.nvim",
      "nvim-lua/plenary.nvim",
      "nvim-telescope/telescope.nvim"
    }
  })
  use 'othree/html5.vim'
  use 'fatih/vim-go'
  use 'pangloss/vim-javascript'
  use 'evanleck/vim-svelte'
  use {
    "chrsm/impulse.nvim",
    config = function()
      require("impulse").setup({})
    end,
    requires = { "nvim-lua/plenary.nvim", "nvim-telescope/telescope.nvim" },
  }
  use 'nanotee/zoxide.vim'
  use({
    "epwalsh/obsidian.nvim",
    requires = {
      -- Required.
      "nvim-lua/plenary.nvim",

      -- see below for full list of optional dependencies ðŸ‘‡
    },
    config = function()
      require("obsidian").setup({
        dir = "/Users/HS/Obsidian/Vim",
      })
    end,
  })
  use 'dstein64/vim-startuptime'
  use 'terryma/vim-smooth-scroll'    -- Enable smooth scrolling
  use 'mg979/vim-visual-multi'
  use 'ActivityWatch/aw-watcher-vim' -- Watchers for ActivityWatch
  use 'Aasim-A/scrollEOF.nvim'
  use { "catppuccin/nvim", as = "catppuccin" }
  -- use { "akinsho/toggleterm.nvim", tag = '*', config = function()
  --   require("toggleterm").setup()
  -- end }
  use 'mbbill/undotree'
  use 'nvim-lualine/lualine.nvim' -- Statusline
  use 'nvim-lua/plenary.nvim'     -- Common utilities
  use {
    "ipod825/libp.nvim",
    config = function()
      require("libp").setup()
    end,
  }
  use {
    "ipod825/ranger.nvim",
    config = function()
      require("ranger").setup()
    end,
  }
  use 'onsails/lspkind-nvim'   -- vscode-like pictograms
  use 'hrsh7th/cmp-buffer'     -- nvim-cmp source for buffer words
  use 'hrsh7th/cmp-nvim-lsp'   -- nvim-cmp source for neovim's built-in LSP
  use 'hrsh7th/nvim-cmp'       -- Completion
  use 'vijaymarupudi/nvim-fzf' -- Lua API for using fzf in neovim
  use 'vijaymarupudi/nvim-fzf-commands'
  use 'nvim-tree/nvim-web-devicons'
  use { 'nvim-tree/nvim-tree.lua',
    requires = {
      'nvim-tree/nvim-web-devicons', --optional
    },
    config = function()
      require("nvim-tree").setup {}
    end
  }
  use({
    "kylechui/nvim-surround",
    tag = "*", -- Use for stability; omit to use `main` branch for the latest features
    config = function()
      require("nvim-surround").setup()
    end
  })
  use 'nvimdev/lspsaga.nvim'            -- LSP UI
  use 'jose-elias-alvarez/null-ls.nvim' -- Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua
  use 'williamboman/mason.nvim'
  use 'williamboman/mason-lspconfig.nvim'
  use 'neovim/nvim-lspconfig' -- LSP
  use 'MunifTanjim/prettier.nvim'
  use 'Exafunction/codeium.vim'
  use "rafamadriz/friendly-snippets"
  use 'L3MON4D3/LuaSnip'
  use 'saadparwaiz1/cmp_luasnip'
  use {
    'nvim-treesitter/nvim-treesitter',
    run = function() require('nvim-treesitter.install').update({ with_sync = true }) end,
  }
  use { 'nyoom-engineering/oxocarbon.nvim' }
  use 'keiyakeiya/PapilioDehaanii.vim'
  use 'tpope/vim-fugitive'
  use 'tpope/vim-repeat'
  use 'tpope/vim-commentary'
  use 'tpope/vim-endwise'
  use 'Shougo/unite.vim'
  use 'junegunn/limelight.vim'
  use 'junegunn/fzf.vim'
  use 'subnut/vim-iawriter'
  use {
  'nvim-telescope/telescope.nvim', tag = '0.1.4',
-- or                            , branch = '0.1.x',
  requires = { {'nvim-lua/plenary.nvim'} }
}
  use({ 'nvim-telescope/telescope-fzf-native.nvim', run = "make" })
  use 'nvim-telescope/telescope-file-browser.nvim'
  use { 'ibhagwan/fzf-lua',
    -- optional for icon support
    requires = { 'nvim-tree/nvim-web-devicons' }
  }
  use 'windwp/nvim-autopairs'
  use 'windwp/nvim-ts-autotag'
  use { 'numToStr/Comment.nvim',
    requires = {
      'JoosepAlviste/nvim-ts-context-commentstring'
    }
  }
  use 'norcalli/nvim-colorizer.lua'
  use 'folke/zen-mode.nvim'
  use({
    "iamcco/markdown-preview.nvim",
    run = function() vim.fn["mkdp#util#install"]() end,
  })
  use 'akinsho/nvim-bufferline.lua'
  use 'lewis6991/gitsigns.nvim'
  use 'dinhhuy258/git.nvim' -- For git blame & browse
end)
--
-- use {
--   "themaxmarchuk/tailwindcss-colors.nvim",
--   -- load only on require("tailwindcss-colors")
--   module = "tailwindcss-colors", -- Missing comma here
--   -- run the setup function after the plugin is loaded
--   config = function()
--     -- pass config options here (or nothing to use defaults)
--     require("tailwindcss-colors").setup()
--   end
-- }
--
